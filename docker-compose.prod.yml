version: '3.8'

services:
  # Redis for rate limiting and caching
  redis:
    image: redis:7-alpine
    container_name: playthelist-redis-prod
    ports:
      - "127.0.0.1:6379:6379"  # Only bind to localhost for security
    volumes:
      - redis_data_prod:/data
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-your-redis-password}
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "--no-auth-warning", "-a", "${REDIS_PASSWORD:-your-redis-password}", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - playthelist-prod

  # Main application
  app:
    build: .
    container_name: playthelist-app-prod
    ports:
      - "127.0.0.1:8501:8501"  # Only bind to localhost, Nginx will proxy
    environment:
      - REDIS_URL=redis://:${REDIS_PASSWORD:-your-redis-password}@redis:6379/0
      - ENVIRONMENT=production
      - DEBUG=false
      - LOG_LEVEL=INFO
    env_file:
      - .env.production
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8501/_stcore/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    volumes:
      - ./logs:/app/logs
      - ./app.log:/app/app.log
    networks:
      - playthelist-prod

  # Log rotation and cleanup
  logrotate:
    image: blacklabelops/logrotate
    container_name: playthelist-logrotate
    volumes:
      - ./logs:/var/log/containers
      - ./logrotate.conf:/etc/logrotate.d/logrotate.conf
    restart: unless-stopped
    networks:
      - playthelist-prod

volumes:
  redis_data_prod:

networks:
  playthelist-prod:
    name: playthelist-prod-network
    driver: bridge
